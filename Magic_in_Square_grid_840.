class Solution:

    def numMagicSquaresInside(self, grid: List[List[int]]) -> int:
        def is_magic(a,b,c,d,e,f,g,h,i):
            return (sorted([a,b,c,d,e,f,g,h,i]) == [1, 2,3,4,5,6,7,8,9] and
            (a+b+c == d+e+f == g+h+i == a+d+g ==
                b+e+h == c+f+i == a+e+i == c+e+g == 15))
        row, col = len(grid), len(grid[0])
        total = 0
        for  i in range(row-2):
            for j in range(col-2):
                if is_magic(grid[i][j],grid[i][j+1], grid[i][j+2],
                            grid[i+1][j], grid[i+1][j+1], grid[i+1][j+2],
                            grid[i+2][j], grid[i+2][j+1], grid[i+2][j+2] ):
                    total += 1
        return total
